name: CI for Next.js with Docker + Postgres

on:
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # 1️ Récupérer le code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2️ Lancer Docker Compose (build + run)
      - name: Run Docker Compose
        run: |
          docker compose -f docker-compose.prod.yml up --build -d
          echo "Attente que Next.js démarre..."
          sleep 15  # ajuste si ton app prend plus de temps

      # 3️ Vérifier que l'app Next.js répond
      - name: Wait for Next.js
        run: |
          for i in {1..15}; do
            if curl --silent --fail http://localhost:3000; then
            echo "Next.js app is up!"
              exit 0
            fi
            echo "Waiting for Next.js to start... ($i/15)"
            sleep 10
          done
          echo "Next.js app failed to start after 75 seconds"
          exit 1

      # 4 Setup DB
      - name: Setup DB
        run: |
          docker compose -f docker-compose.prod.yml up -d bdd
          docker compose -f docker-compose.prod.yml exec -w /app next-app npx prisma migrate deploy
          docker compose -f docker-compose.prod.yml exec -w /app next-app npx prisma generate


      # 5 Vérifier que la DB répond via Prisma
      - name: Test DB connection
        run: docker compose -f docker-compose.prod.yml exec -w /app next-app node scripts/test-db.js

      # 6 Nettoyage : arrêter tous les conteneurs
      - name: Tear down
        if: always()
        run: docker compose -f docker-compose.prod.yml down

      # 7 Se connecter à GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      # 8 Build de l'image Docker pour publication
      - name: Build Docker image
        run: docker build -t ghcr.io/${{ github.repository }}/jvtheque-app:latest -f jvtheque-app/Dockerfile ./jvtheque-app

      # 9 Push de l'image sur GitHub Container Registry
      - name: Push Docker image
        run: docker push ghcr.io/${{ github.repository }}/jvtheque-app:latest